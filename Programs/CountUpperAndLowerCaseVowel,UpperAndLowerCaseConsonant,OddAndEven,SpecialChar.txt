PrimaryMission() {
unit totalV = 0;
unit totalC = 0;
unit totalCC = 0;
unit totalVC = 0;
unit totalNumeven = 0;
unit totalNumodd = 0;
unit totalNumzero = 0;
unit totalSpace = 0;
unit totalCh = 0;
unit length, i;
company sentence;

unit choice=0;
go {
commence;
post("\n\t\t\tEnter a String/Word: ");
capture(#sentence);
length = sentence.Extent;

inquire(i = 0; i < length; i++) {
inorder(sentence[i] = = 'a') {
totalV++;
}
otherorder(sentence[i] = = 'e') {
totalV++;
}
otherorder(sentence[i] = = 'i') {
totalV++;
}
otherorder(sentence[i] = = 'o') {
totalV++;
}
otherorder(sentence[i] = = 'u') {
totalV++;
}
otherorder(sentence[i] = = 'A') {
totalVC++;
}
otherorder(sentence[i] = = 'I') {
totalVC++;
}
otherorder(sentence[i] = = 'E') {
totalVC++;
}
otherorder(sentence[i] = = 'O') {
totalVC++;
}
otherorder(sentence[i] = = 'U') {
totalVC++;
}
otherorder(sentence[i] = = 'b') {
totalC++;
}
otherorder(sentence[i] = = 'c') {
totalC++;
}
otherorder(sentence[i] = = 'd') {
totalC++;
}
otherorder(sentence[i] = = 'f') {
totalC++;
}
otherorder(sentence[i] = = 'g') {
totalC++;
}
otherorder(sentence[i] = = 'h') {
totalC++;
}
otherorder(sentence[i] = = 'j') {
totalC++;
}
otherorder(sentence[i] = = 'k') {
totalC++;
}
otherorder(sentence[i] = = 'l') {
totalC++;
}
otherorder(sentence[i] = = 'm') {
totalC++;
}
otherorder(sentence[i] = = 'n') {
totalC++;
}
otherorder(sentence[i] = = 'p') {
totalC++;
}
otherorder(sentence[i] = = 'q') {
totalC++;
}
otherorder(sentence[i] = = 'r') {
totalC++;
}
otherorder(sentence[i] = = 's') {
totalC++;
}
otherorder(sentence[i] = = 't') {
totalC++;
}
otherorder(sentence[i] = = 'v') {
totalC++;
}
otherorder(sentence[i] = = 'w') {
totalC++;
}
otherorder(sentence[i] = = 'x') {
totalC++;
}
otherorder(sentence[i] = = 'y') {
totalC++;
}
otherorder(sentence[i] = = 'z') {
totalC++;
}
otherorder(sentence[i] = = 'B') {
totalCC++;
}
otherorder(sentence[i] = = 'C') {
totalCC++;
}
otherorder(sentence[i] = = 'D') {
totalCC++;
}
otherorder(sentence[i] = = 'F') {
totalCC++;
}
otherorder(sentence[i] = = 'G') {
totalCC++;
}
otherorder(sentence[i] = = 'H') {
totalCC++;
}
otherorder(sentence[i] = = 'J') {
totalCC++;
}
otherorder(sentence[i] = = 'K') {
totalCC++;
}
otherorder(sentence[i] = = 'L') {
totalCC++;
}
otherorder(sentence[i] = = 'M') {
totalCC++;
}
otherorder(sentence[i] = = 'N') {
totalCC++;
}
otherorder(sentence[i] = = 'P') {
totalCC++;
}
otherorder(sentence[i] = = 'Q') {
totalCC++;
}
otherorder(sentence[i] = = 'R') {
totalCC++;
}
otherorder(sentence[i] = = 'S') {
totalCC++;
}
otherorder(sentence[i] = = 'T') {
totalCC++;
}
otherorder(sentence[i] = = 'V') {
totalCC++;
}
otherorder(sentence[i] = = 'W') {
totalCC++;
}
otherorder(sentence[i] = = 'X') {
totalCC++;
}
otherorder(sentence[i] = = 'Y') {
totalCC++;
}
otherorder(sentence[i] = = 'Z') {
totalCC++;
}
otherorder(sentence[i] = = ' ') {
totalSpace++;
}
otherorder(sentence[i] = = '1') {
totalNumodd++;
}
otherorder(sentence[i] = = '2') {
totalNumeven++;
}
otherorder(sentence[i] = = '3') {
totalNumodd++;
}
otherorder(sentence[i] = = '4') {
totalNumeven++;
}
otherorder(sentence[i] = = '5') {
totalNumodd++;
}
otherorder(sentence[i] = = '6') {
totalNumeven++;
}
otherorder(sentence[i] = = '7') {
totalNumodd++;
}
otherorder(sentence[i] = = '8') {
totalNumeven++;
}
otherorder(sentence[i] = = '9') {
totalNumodd++;
}
otherorder(sentence[i] = = '0') {
totalNumzero++;
}
order {
totalCh++;
}
}

post("\n\t\t\tYour total number of Lowercase vowels is: " + totalV);
post("\n\t\t\tYour total number of Lowercase consonants is: " + totalC);
post("\n\t\t\tYour total number of Uppercase vowels is: " + totalVC);
post("\n\t\t\tYour total number of Uppercase consonants is: " + totalCC);
post("\n\t\t\tYour total number of Even Number is: " + totalNumeven);
post("\n\t\t\tYour total number of Odd Number is: " + totalNumodd);
post("\n\t\t\tYour total number of Zero is: " + totalNumzero);
post("\n\t\t\tYour total number of Spaces is: " + totalSpace);
post("\n\t\t\tYour total number of other Character is: " + totalCh);

go {
company ch;
post("\n\n\t\t\tTRY AGAIN? [Y] Yes or [N] No: ");
capture(#ch);
inorder((ch = = "Y") || (ch = = "y")) {
totalV = 0;
totalVC = 0;
totalC = 0;
totalCC = 0;
totalNumeven =0;
totalNumodd = 0;
totalSpace = 0;
totalCh =0;
length=0;
i=0;
sentence= " ";
choice = 1;
}
otherorder((ch = = "N") || (ch = = "n")) {
choice = 0;
}
order {
post("\n\t\t\tError Input!");
choice = 3;
}

} phase(choice = = 3);

} phase(choice != 0);
post("\n\t\t\tGOODBYE!!");
} deploy();
