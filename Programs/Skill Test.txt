PrimaryMission() {
company name, addr;
unit bmon, bdate, byear, age;
unit ProgGrade,DbGrade,QaGrade,NetGrade;
unit progOne,progTwo,progThree,progFour,progFive;
unit dbOne,dbTwo,dbThree,dbFour,dbFive;
unit testOne,testTwo,testThree,testFour,testFive;
unit netOne,netTwo,netThree,netFour,netFive;
unit choice=0;
go {
post("\n\t\t\tEnter your Name: ");
capture(#name);
phase(name = = " ") {
post("\n\t\t\t*[Required] Enter your Name: ");
capture(#name);
}

post("\n\t\t\tEnter your Age: ");
capture(#age);
phase(age > 70) {
post("\n\t\t\t*[Required] Age: ");
capture(#age);
}

post("\n\t\t\tEnter your Address: ");
capture(#addr);
phase(addr = = " ") {
post("\n\t\t\t*[Required] Enter your Address: ");
capture(#addr);
}


post("\n\t\t\tEnter Your Birthday");
post("\n\t\t\tMonth: ");
capture(#bmon);
phase(bmon > 12) {
post("\n\t\t\t*[Required] Month: ");
capture(#bmon);
}

post("\n\t\t\tDate: ");
capture(#bdate);
phase(bdate > 30) {
post("\n\t\t\t*[Required] Date: ");
capture(#bdate);
}

post("\n\t\t\tYear: ");
capture(#byear);
phase(byear > 2017) {
post("\n\t\t\t*[Required] Year: ");
capture(#byear);
}

post("\n\t\t\t<< Programmers Skill Test >>\n");
post("\n\t\t\t1-Lowest, 5-Highest (WHOLE NUMBERS ONLY)\n\n");

post("\n\t\t\tAre you familiar with at least 3 programming languages? -> ");
capture(#progOne);
phase(progOne > 5) {
post("\n\t\t\t*[Invalid!] Are you familiar with at least 3 programming languages? -> ");
capture(#progOne);
}

commence;
post("\n\t\t\tDo you enjoy exploring new programming tools? -> ");
capture(#progTwo);
phase(progTwo < 1) {
post("\n\t\t\t*[Invalid!]Do you enjoy exploring new programming tools? -> ");
capture(#progTwo);
}

commence;
post("\n\t\t\tHow flexible are you in learning new programming languages? -> ");
capture(#progThree);
phase(progThree < 1) {
post("\n\t\t\t*[Invalid!]How flexible are you in learning new programming languages? -> ");
capture(#progThree);
}

commence;
post("\n\t\t\tHow good are you in object oriented programming? -> ");
capture(#progFour);
phase(progFour < 1) {
post("\n\t\t\t*[Invalid!]How good are you in object oriented programming? -> ");
capture(#progFour);
}

commence;
post("\n\t\t\tDo you enjoy analyzing and constructing logic? -> ");
capture(#progFive);
phase(progFive < 1) {
post("\n\t\t\t*[Invalid!]Do you enjoy analyzing and constructing logic? -> ");
capture(#progFive);
}

commence;
post("\n\t\t\tAre you familiar with SQL? -> ");
capture(#dbOne);
phase(dbOne < 1) {
post("\n\t\t\t*[Invalid!]Are you familiar with SQL? -> ");
capture(#dbOne);
}

commence;
post("\n\t\t\tDo you enjoy exploring entity relationships? -> ");
capture(#dbTwo);
phase(dbTwo < 1) {
post("\n\t\t\t*[Invalid!]Do you enjoy exploring entity relationships? -> ");
capture(#dbTwo);
}

commence;
post("\n\t\t\tHow flexible are you in using different database environments? -> ");
capture(#dbThree);
phase(dbThree < 1) {
post("\n\t\t\t*[Invalid!]How flexible are you in using different database environments? -> ");
capture(#dbThree);
}

commence;
post("\n\t\t\tHow good are you in querying commands in tha database? -> ");
capture(#dbFour);
phase(dbFour < 1) {
post("\n\t\t\t*[Invalid!]How good are you in querying commands in tha database? -> ");
capture(#dbFour);
}

commence;
post("\n\t\t\tDo you enjoy normalizing tables? -> ");
capture(#dbFive);
phase(dbFive < 1) {
post("\n\t\t\t*[Invalid!]Do you enjoy normalizing tables? -> ");
capture(#dbFive);
}

commence;
post("\n\t\t\tAre you familiar with at least 3 testing tools? -> ");
capture(#testOne);
phase(testOne < 1) {
post("\n\t\t\t*[Invalid!]Are you familiar with at least 3 testing tools? -> ");
capture(#testOne);
}

commence;
post("\n\t\t\tDo you enjoy exploring new testing methods? -> ");
capture(#testTwo);
phase(testTwo < 1) {
post("\n\t\t\t*[Invalid!]Do you enjoy exploring new testing methods? -> ");
capture(#testTwo);
}

commence;
post("\n\t\t\tHow flexible are you in testing programs on different platforms? -> ");
capture(#testThree);
phase(testThree < 1) {
post("\n\t\t\t*[Invalid!]How flexible are you in testing programs on different platforms? -> ");
capture(#testThree);
}

commence;
post("\n\t\t\tHow good are you in finding bugs in code? -> ");
capture(#testFour);
phase(testFour < 1) {
post("\n\t\t\t*[Invalid!]How good are you in finding bugs in code? -> ");
capture(#testFour);
}

commence;
post("\n\t\t\tDo you enjoy finding errors in a program? -> ");
capture(#testFive);
phase(testFive < 1) {
post("\n\t\t\t*[Invalid!]Do you enjoy finding errors in a program? -> ");
capture(#testFive);
}

commence;
post("\n\t\t\tAre you familiar with the OSI Model? -> ");
capture(#netOne);
phase(netOne < 1) {
post("\n\t\t\t*[Invalid!]Are you familiar with the OSI Model? -> ");
capture(#netOne);
}

commence;
post("\n\t\t\tDo you enjoy exploring new networking tools? -> ");
capture(#netTwo);
phase(netTwo < 1) {
post("\n\t\t\t*[Invalid!]Do you enjoy exploring new networking tools? -> ");
capture(#netTwo);
}

commence;
post("\n\t\t\tHow flexible are you in designing different network topologies? -> ");
capture(#netThree);
phase(netThree < 1) {
post("\n\t\t\t*[Invalid!]How flexible are you in designing different network topologies? -> ");
capture(#netThree);
}

commence;
post("\n\t\t\tHow good are you in setting up network protocols? -> ");
capture(#netFour);
phase(netFour < 1) {
post("\n\t\t\t*[Invalid!]How good are you in setting up network protocols? -> ");
capture(#netFour);
}

commence;
post("\n\t\t\tDo you enjoy setting up networks? -> ");
capture(#netFive);
phase(netFive < 1) {
post("\n\t\t\t*[Invalid!]Do you enjoy setting up networks? -> ");
capture(#netFive);
}

commence;

ProgGrade = progOne+progTwo+progThree+progFour+progFive;
DbGrade = dbOne+dbTwo+dbThree+dbFour+dbFive;
QaGrade = testOne+testTwo+testThree+testFour+testFive;
NetGrade = netOne+netTwo+netThree+netFour+netFive;

post("\n\n\n\t\t\tHere are your Skill Test Results (Your highest grade defines your best skill):\n\n");
post("\n\t\t\tName: " + name);
post("\n\t\t\tAge: " + age);
post("\n\t\t\tAddress: " + addr);
post("\n\t\t\tBirthday(mm-dd-yyyy): " + bmon + "-" + bdate + "-" + byear);
post("\n\t\t\tProgramming / Software Development: " + ProgGrade);
post("\n\t\t\tDatabase Administration: " + DbGrade);
post("\n\t\t\tTesting / Software Quality Assurance: " + QaGrade);
post("\n\t\t\tNetwork Administration: " + NetGrade);

go {
company ch;
post("\n\n\t\t\tTRY AGAIN? [Y] Yes or [N] No: ");
capture(#ch);
inorder((ch = = "Y") || (ch = = "y")) {
ProgGrade=0;
DbGrade=0;
QaGrade=0;
NetGrade=0;
progOne=0;
progTwo=0;
progThree=0;
progFour=0;
progFive=0;
dbOne=0;
dbTwo=0;
dbThree=0;
dbFour=0;
dbFive=0;
testOne=0;
testTwo=0;
testThree=0;
testFour=0;
testFive=0;
netOne=0;
netTwo=0;
netThree=0;
netFour=0;
netFive=0;
choice = 1;
name = " ";
age = 0;
addr = " ";
bmon = 0;
bdate = 0;
byear = 0;
}
otherorder((ch = = "N") || (ch = = "n")) {
choice = 0;
}
order {
post("\n\t\t\tError Input!");
choice = 3;
}

} phase(choice = = 3);

} phase(choice != 0);
post("\n\t\t\tGOODBYE!!");
} deploy();
